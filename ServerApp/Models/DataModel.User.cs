//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 16/04/2024 11:50:17 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Identity;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text.Json.Serialization;

namespace ServerApp
{
    public partial class User : IdentityUser {

        public User()
        {
            this.Userroles = new List<Userrole>();
            OnCreated();
        }

        public User(int id) : this()        {
            this.Id = id;
        }

        public User(string username) : this()
        {
            this.SysUserName = username;
        }

        public int Id { get; set; }

        [RegularExpression("^.*$", ErrorMessage = "Invalid Desicrption")]
        public string Description { get; set; }

        public DateTime Docreated { get; set; }

        public int EmployeeId { get; set; }

        [RegularExpression("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$", ErrorMessage = "Invalid Password")]
        public string Password { get; set; }

        public string? Salt { get; set; }

        public TimeSpan Tocreated { get; set; }

        [RegularExpression("^([a-zA-Z0-9_.-]+)$", ErrorMessage = "Invalid User Name")]
        public string SysUserName { get; set; }

        public int UsestatusId { get; set; }

        public int UsetypeId { get; set; }

        public virtual Employee Employee { get; set; }

        public virtual Usestatus Usestatus { get; set; }

        public virtual Usetype Usetype { get; set; }

        
        public virtual IList<Userrole> Userroles { get; set; }

        [NotMapped]
        public virtual DateTimeOffset? LockoutEnd { get; set; }

        [NotMapped]
        public virtual bool TwoFactorEnabled { get; set; }

        [NotMapped]
        public virtual bool PhoneNumberConfirmed { get; set; }

        [NotMapped]
        public virtual string? PhoneNumber { get; set; }

        [NotMapped]
        public virtual string? ConcurrencyStamp { get; set; }

        [NotMapped]
        public virtual string? SecurityStamp { get; set; }

        [NotMapped]
        public virtual string? PasswordHash { get; set; }

        [NotMapped]
        public virtual bool EmailConfirmed { get; set; }

        [NotMapped]
        public virtual string? NormalizedEmail { get; set; }

        [NotMapped]
        public virtual string? Email { get; set; }

        [NotMapped]
        public virtual string? NormalizedUserName { get; set; }

        [NotMapped]
        public virtual string? UserName { get; set; }

        [NotMapped]
        public virtual bool LockoutEnabled { get; set; }

        [NotMapped]
        public virtual int AccessFailedCount { get; set; }









        #region Extensibility Method Definitions

        partial void OnCreated();

        public static implicit operator string(User v)
        {
            throw new NotImplementedException();
        }

        #endregion
    }

}
