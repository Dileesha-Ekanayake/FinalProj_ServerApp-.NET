//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 16/04/2024 11:50:17 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text.Json.Serialization;

namespace ServerApp
{
    public partial class Employee {

        public Employee()
        {
            this.Users = new List<User>();
            OnCreated();
        }

        public Employee(int id) : this()        {
            this.Id = id;
        }

        public int Id { get; set; }

        [RegularExpression("^([\\w\\/\\-,\\s]{2,})$", ErrorMessage = "Invalid Address")]
        public string? Address { get; set; }

        [RegularExpression("^([A-Z][a-z]+)$", ErrorMessage = "Invalid Calling Name")]
        public string? Callingname { get; set; }

        [RegularExpression("^.*$", ErrorMessage = "Invalid Description")]
        public string? Description { get; set; }

        public int DesignationId { get; set; }

        public DateTime? Doassignment { get; set; }

        //[RegularExpression("^\\d{2}-\\d{2}-\\d{2}$", ErrorMessage = "Invalid Date Format")]
        public DateTime? Dobirth { get; set; }

        [RegularExpression("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$", ErrorMessage = "Invalid Email")]
        public string? Email { get; set; }

        public int EmpstatusId { get; set; }

        public int EmptypeId { get; set; }

        [RegularExpression("^([A-Z][a-z]*[.]?[\\s]?)*([A-Z][a-z]*)$", ErrorMessage = "Invalid FullName")]
        public string? Fullname { get; set; }

        public int GenderId { get; set; }

        [RegularExpression("^\\d{0,10}$", ErrorMessage = "Invalid Land Number")]
        public string? Land { get; set; }

        [RegularExpression("^0\\d{9}$", ErrorMessage = "Invalid Mobile")]
        public string? Mobile { get; set; }

        [RegularExpression("^(([\\d]{9}[vVxX])|([\\d]{12}))$", ErrorMessage = "Invalid NIC")]
        public string? Nic { get; set; }

        [RegularExpression("^\\d{4}$", ErrorMessage = "Invalid Number")]
        public string? Number { get; set; }
        
        public byte[]? Photo { get; set; }

        public virtual Designation? Designation { get; set; }

        public virtual Empstatus? Empstatus { get; set; }

        public virtual Emptype? Emptype { get; set; }

        public virtual Gender? Gender { get; set; }

        [JsonIgnore]
        public virtual IList<User> Users { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }

}
